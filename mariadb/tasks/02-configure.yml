---

  - name: disable default binary logging
    lineinfile:
      dest: /etc/mysql/my.cnf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      backrefs: yes
      state: present
    with_items:
      - regexp: '^log_bin(\s*=.+)$'
        line: '#log_bin\1'
      - regexp: '^log_bin_index(\s*=.+)$'
        line: '#log_bin_index\1'
    notify: restart mariadb

  - name: create a directory for configurations
    file:
      path: /etc/mysql/mariadb.conf.d
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: configure MariaDB
    template:
      src: "{{ item }}"
      dest: "/etc/mysql/mariadb.conf.d/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: ['90-logging.cnf', '90-mysqldump.cnf']
    notify: restart mariadb

  - name: create log files
    file:
      path: "{{ item }}"
      state: touch
      owner: mysql
      group: mysql
      mode: 0640
    with_items: "{{ mariadb_conf.logging | json_query('* | [?enabled==`1`].file') }}"

  - name: configure log rotation
    template:
      src: "logrotate.conf.j2"
      dest: "/etc/logrotate.d/mariadb"
      owner: root
      group: root
      mode: 0644
    when: mariadb_conf.logging | json_query('* | [?enabled==`1`].file') | length != 0

  - block:
    - name: check log rotation configuration
      stat:
        path: /etc/logrotate.d/mariadb
      register: mariadb_logrotate

    - name: configure log rotation
      file:
        path: /etc/logrotate.d/mariadb
        state: absent
      when: mariadb_logrotate.stat.exists
    when: mariadb_conf.logging | json_query('* | [?enabled==`1`].file') | length == 0

  - name: enable service at boot and start it
    service:
      name: mysql
      state: started
      enabled: yes



  - name: Stop MySQL
    systemd:
      name: mysql
      state: stopped

  - name: set environment variables
    shell: systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"

  - name: Start MySQL
    systemd:
      name: mysql
      state: started

  - name: Reset root PW
    command: mysql -u root --execute="UPDATE mysql.user SET authentication_string = PASSWORD('{{ mariadb_root_password }}') WHERE User = 'root' AND (Host = 'localhost' OR Host = '127.0.0.1');"

  - name: configure root credentials
    template:
      src: "root-my.cnf.j2"
      dest: "/root/.my.cnf"
      owner: root
      group: root
      mode: 0644

  ## Remove test database
  - name: remove test database
    mysql_db:
      name: test
      state: absent

  - name: Create a new database with name 'bobdata'
    mysql_db:
      name: sp_odesi
      state: present

  - name: Make sure there is neither a database with name 'foo', nor one with name 'bar'
    mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      name:
        - foo
        - bar
      state: absent

  - name: Importing db
    mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      target: /flask_app_project/odesi_docker.sql
      name:
        - sp_odesi
      state: import

  - name: Ensure mariadb is running and starts on boot
    service:
      name: mariadb
      state: started
      enabled: yes
    become: yes
