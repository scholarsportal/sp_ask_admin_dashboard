---
### common
- name: "Add Hostname"
  hostname:
    name: odesidownloads-flask-server
- name: "Add IP address to /etc/hosts"
  shell: echo "{{ansible_host}}" > /etc/hosts
- name: "Upgrading pip"
  shell: python3 -m pip install --upgrade pip
- name: "Installing virtualenv using pip3"
  shell: pip3 install virtualenv
- name: "creating a virtualenv folder using python3"
  shell: virtualenv -p /usr/bin/python3 /app/venv
- name: "activate virtualenv"
  shell: source /app/venv/bin/activate
- name: "install requirements"
  shell: pip3 install flask
- name: "install gunicorn"
  shell: pip3 install gunicorn
- name: "install pymsql"
  shell: pip3 install pymysql
# - name: "install MySQL-python"
#   shell: pip3 install MySQL-python
- name: "install gunicorn"
  shell: pip3  install -r /app/requirements/requirements.txt

- name: "Configuring UFW"
  shell: "{{ item }}"
  loop:
    - ufw default allow outgoing
    - ufw default allow incoming
    # - ufw default deny incoming
    # - ufw allow ssh 
    # - ufw allow 5000 
    # - ufw enable
    # - ufw status
    # - ufw allow http/tcp
    # - ufw delete allow 5000
    # - ufw enable

# - name: "install supervisor"
#   shell: yum install supervisor

- name: populate /etc/environment
  lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  loop:
    - key: DJANGO_SUPER_USER 
      value : admin
    - key: FLASK_APP 
      value : run.py
    - key: MYSQL_ROOT_PASSWORD 
      value : "Password1"
    - key: MYSQL_DATABASE 
      value : sp_odesi
    - key: MYSQL_ODESI_DATABASE_HOST 
      value : mariaDB
    - key: MYSQL_ODESI_DATABASE_USER 
      value : root
    - key: MYSQL_ODESI_DATABASE_NAME 
      value : sp_odesi
    - key: MYSQL_ODESI_ROOT_PASSWORD 
      value : "Password1"
    - key: MYSQL_ODESI_PORT 
      value : 3306
    - key: MYAPP_WORKDIR 
      value : /app/


- name: "verify that ngninx is running"
  #shell: sudo lsof -i TCP:80
  shell: systemctl is-active nginx

- name: "install psmisc for fuser"
  yum:
    name: psmisc
    state: latest

- name: "Allow HTTP"
  shell: sudo firewall-cmd --permanent --zone=public --add-service=http
  
- name: "Allow HTTPS"
  shell: sudo firewall-cmd --permanent --zone=public --add-service=https 

- name: "RELOAD firewall"
  shell: sudo firewall-cmd --reload
  
- name: "fuser"
  shell: sudo fuser -k 80/tcp

- name: "restart ngninx"
  shell: sudo service nginx restart
